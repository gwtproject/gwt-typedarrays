<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.gwtproject.typedarrays</groupId>
    <artifactId>gwt-typedarrays-parent</artifactId>
    <version>dev</version>
  </parent>
  <artifactId>gwt-typedarrays-gwt2-tests</artifactId>
  <version>${revision}</version>

  <name>GWT TypedArrays - GWT 2 Tests</name>
  <description>Test cases for the GWT 2</description>

  <properties>
    <maven.failsafe.plugin>2.22.1</maven.failsafe.plugin>
    <maven.gwt.plugin>1.0.0</maven.gwt.plugin>

    <!--
    Flag to disable gwt2 tests, so that CI can set this. At this time, the htmlunit build
    that GWT2 uses cannot work with typed arrays at a level that we expect, so tests are
    in manual mode. When GWT2 updates to a new htmlunit, this can probably be removed.
    -->
    <disable.gwt2.tests>false</disable.gwt2.tests>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwt.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwt.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.gwtproject.typedarrays</groupId>
      <artifactId>gwt-typedarrays</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surfire.plugin}</version>
        <configuration>
          <excludes>
            <exclude>**/client/*.java</exclude>
          </excludes>
          <excludedGroups>
            org.gwtproject.typedarrays.shared.IntegrationTest
          </excludedGroups>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!--
        The integration-test phase runs after regular test phase (but before verify/install).
        We use this to our advantage to peak at the compiled output from the GWTTestSuite
         -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin}</version>
        <configuration>
          <includes>
            <include>**/*.class</include>
          </includes>
          <groups>
            org.gwtproject.typedarrays.shared.IntegrationTest
          </groups>
        </configuration>
      </plugin>

      <plugin>
        <groupId>net.ltgt.gwt.maven</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${maven.gwt.plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!--
              Because we expressly disable asserts in tests to avoid a compiler bug, we also must run surefire manually
              on the JRE tests
               -->
              <includes>
                <include>**/TypedArraysSuite.java</include>
              </includes>

              <!-- disable JVM asserts, but enable JS asserts for tests -->
              <enableAssertions>false</enableAssertions>
              <testArgs>
                <testArg>-checkAssertions</testArg>
                <testArg>-runStyle</testArg>
                <testArg>Manual:1</testArg>
              </testArgs>
              <skipTests>${disable.gwt2.tests}</skipTests>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.plugin}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
